1L: TOKEN_IDENTIFIER a
1L: TOKEN_LESS <
1L: TOKEN_IDENTIFIER b
1L: TOKEN_SEMICOLON ;
2L: TOKEN_IDENTIFIER for
2L: TOKEN_LEFT_PAREN (
2L: TOKEN_IDENTIFIER i
2L: TOKEN_ASSIGN =
2L: TOKEN_NUM 3
2L: TOKEN_SEMICOLON ;
2L: TOKEN_IDENTIFIER i
2L: TOKEN_LESS <
2L: TOKEN_NUM 10
2L: TOKEN_SEMICOLON ;
2L: TOKEN_IDENTIFIER i
2L: TOKEN_ASSIGN =
2L: TOKEN_IDENTIFIER i
2L: TOKEN_ADD +
2L: TOKEN_NUM 1
2L: TOKEN_RIGHT_PAREN )
2L: TOKEN_LEFT_BRACE {
3L: TOKEN_IF if
3L: TOKEN_LEFT_PAREN (
3L: TOKEN_IDENTIFIER a
3L: TOKEN_LESS <
3L: TOKEN_IDENTIFIER b
3L: TOKEN_RIGHT_PAREN )
3L: TOKEN_LEFT_BRACE {
4L: TOKEN_IDENTIFIER c
4L: TOKEN_ASSIGN =
4L: TOKEN_IDENTIFIER c
4L: TOKEN_ADD +
4L: TOKEN_NUM 1
4L: TOKEN_SEMICOLON ;
5L: TOKEN_RIGHT_BRACE }
6L: TOKEN_RIGHT_BRACE }
7L: TOKEN_IDENTIFIER a
7L: TOKEN_ASSIGN =
7L: TOKEN_IDENTIFIER b
7L: TOKEN_ADD +
7L: TOKEN_IDENTIFIER c
7L: TOKEN_SEMICOLON ;
8L: TOKEN_IDENTIFIER a
8L: TOKEN_LESS_EQUAL <=
8L: TOKEN_LEFT_PAREN (
8L: TOKEN_IDENTIFIER b
8L: TOKEN_ADD +
8L: TOKEN_IDENTIFIER c
8L: TOKEN_RIGHT_PAREN )
8L: TOKEN_SEMICOLON ;
9L: TOKEN_IDENTIFIER s
9L: TOKEN_ASSIGN =
9L: TOKEN_STRING "hello world"
9L: TOKEN_SEMICOLON ;
9L: TOKEN_EOF 
